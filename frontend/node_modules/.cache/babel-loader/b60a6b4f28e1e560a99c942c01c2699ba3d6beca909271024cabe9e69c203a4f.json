{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SREERAM\\\\Desktop\\\\Personal\\\\Sreeram\\\\College\\\\Hack-AI-thon\\\\hackathon\\\\ads\\\\SREERAM\\\\frontend\\\\src\\\\Components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userInput.trim()) return;\n\n    // Display user message\n    setChatHistory(prevChatHistory => [...prevChatHistory, {\n      user: true,\n      message: userInput\n    }]);\n    try {\n      // Send message to backend using Axios\n      const response = await axios.post('http://localhost:5000/get_response', {\n        user_input: userInput\n      });\n\n      // Display bot response in a separate message box\n      setChatHistory(prevChatHistory => [...prevChatHistory, {\n        user: false,\n        message: response.data.bot_response\n      }]);\n    } catch (error) {\n      console.error('Error fetching response:', error);\n      // Optionally handle error here, e.g., display error message to user\n    }\n\n    // Clear input field\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ChatHeader\",\n      children: \"CHAT WITH CARE BOT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatContainer\",\n      children: chatHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: item.user ? 'UserMessage' : 'BotMessage',\n        children: item.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"InputForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"MessageInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"SendButton\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"GencRS+0BPZ1WAAtFE+W/1PVA5M=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","chatHistory","setChatHistory","userInput","setUserInput","handleSubmit","e","preventDefault","trim","prevChatHistory","user","message","response","post","user_input","data","bot_response","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/SREERAM/Desktop/Personal/Sreeram/College/Hack-AI-thon/hackathon/ads/SREERAM/frontend/src/Components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css'\r\n\r\nfunction Chat() {\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!userInput.trim()) return;\r\n\r\n        // Display user message\r\n        setChatHistory(prevChatHistory => [...prevChatHistory, { user: true, message: userInput }]);\r\n\r\n        try {\r\n            // Send message to backend using Axios\r\n            const response = await axios.post('http://localhost:5000/get_response', {\r\n                user_input: userInput\r\n            });\r\n\r\n            // Display bot response in a separate message box\r\n            setChatHistory(prevChatHistory => [...prevChatHistory, { user: false, message: response.data.bot_response }]);\r\n        } catch (error) {\r\n            console.error('Error fetching response:', error);\r\n            // Optionally handle error here, e.g., display error message to user\r\n        }\r\n\r\n        // Clear input field\r\n        setUserInput('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"ChatApp\">\r\n            <h1 className=\"ChatHeader\">CHAT WITH CARE BOT</h1>\r\n            <div className=\"ChatContainer\">\r\n                {chatHistory.map((item, index) => (\r\n                    <div key={index} className={item.user ? 'UserMessage' : 'BotMessage'}>\r\n                        {item.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"InputForm\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={userInput}\r\n                    onChange={(e) => setUserInput(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                    className=\"MessageInput\"\r\n                />\r\n                <button type=\"submit\" className=\"SendButton\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}