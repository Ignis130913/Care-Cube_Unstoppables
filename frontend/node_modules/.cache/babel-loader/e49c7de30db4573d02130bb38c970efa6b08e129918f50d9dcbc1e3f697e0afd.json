{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SREERAM\\\\Desktop\\\\Personal\\\\Sreeram\\\\College\\\\Hack-AI-thon\\\\hackathon\\\\ads\\\\SREERAM\\\\frontend\\\\src\\\\Components\\\\Analysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analysis = () => {\n  _s();\n  const graphRef = useRef(null);\n  useEffect(() => {\n    const data = [{\n      depression: 3,\n      stress: 5,\n      anxiety: 2,\n      dailyLifePressure: 6,\n      badHabits: 4,\n      progress: 3\n    }\n    // Add more data points as needed\n    ];\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n    const width = 300 - margin.left - margin.right;\n    const height = 200 - margin.top - margin.bottom;\n    const container = d3.select(graphRef.current);\n    const createBarGraph = (xDataKey, yDataKey, yOffset, title) => {\n      const svg = container.append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top + yOffset})`);\n      const xScale = d3.scaleBand().domain(data.map(d => d[xDataKey])).range([0, width]).padding(0.1);\n      const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d[yDataKey])]).nice().range([height, 0]);\n      svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d[xDataKey])).attr('width', xScale.bandwidth()).attr('y', d => yScale(d[yDataKey])).attr('height', d => height - yScale(d[yDataKey])).attr('fill', 'steelblue');\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(xScale)).append('text').attr('x', width / 2).attr('y', margin.bottom - 5).attr('fill', '#000').text('Depression Level');\n      svg.append('g').call(d3.axisLeft(yScale)).append('text').attr('transform', 'rotate(-90)').attr('y', 6 - margin.left).attr('x', 0 - height / 2).attr('dy', '1em').attr('fill', '#000').text('Daily Life Pressure');\n      svg.append('text').attr('x', width / 2).attr('y', -margin.top / 2).attr('text-anchor', 'middle').style('font-size', '16px').text(title);\n    };\n    const createScatterPlot = (xDataKey, yDataKey, yOffset, title) => {\n      const svg = container.append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top + yOffset})`);\n      const xScale = d3.scaleLinear().domain([0, d3.max(data, d => d[xDataKey])]).nice().range([0, width]);\n      const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d[yDataKey])]).nice().range([height, 0]);\n      svg.selectAll('.dot').data(data).enter().append('circle').attr('class', 'dot').attr('cx', d => xScale(d[xDataKey])).attr('cy', d => yScale(d[yDataKey])).attr('r', 5).style('fill', 'steelblue');\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(xScale)).append('text').attr('x', width / 2).attr('y', margin.bottom - 5).attr('fill', '#000').text('Stress Level');\n      svg.append('g').call(d3.axisLeft(yScale)).append('text').attr('transform', 'rotate(-90)').attr('y', 6 - margin.left).attr('x', 0 - height / 2).attr('dy', '1em').attr('fill', '#000').text('Bad Habits');\n      svg.append('text').attr('x', width / 2).attr('y', -margin.top / 2).attr('text-anchor', 'middle').style('font-size', '16px').text(title);\n    };\n    const createHistogram = (dataKey, yOffset, title) => {\n      const svg = container.append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top + yOffset})`);\n      const bins = d3.histogram().domain([0, d3.max(data, d => d[dataKey])]).thresholds(10)(data.map(d => d[dataKey]));\n      const xScale = d3.scaleLinear().domain([0, d3.max(bins, d => d.length)]).nice().range([0, width]);\n      const yScale = d3.scaleLinear().domain([0, d3.max(bins, d => d.x1)]).nice().range([height, 0]);\n      svg.selectAll('rect').data(bins).enter().append('rect').attr('x', 1).attr('transform', d => `translate(${xScale(d.length)},${yScale(d.x0)})`).attr('width', d => width - xScale(d.length)).attr('height', d => yScale(d.x1) - yScale(d.x0) - 1).style('fill', 'steelblue');\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(xScale)).append('text').attr('x', width / 2).attr('y', margin.bottom - 5).attr('fill', '#000').text('Anxiety Level');\n      svg.append('g').call(d3.axisLeft(yScale)).append('text').attr('transform', 'rotate(-90)').attr('y', 6 - margin.left).attr('x', 0 - height / 2).attr('dy', '1em').attr('fill', '#000').text('Progress in Life');\n      svg.append('text').attr('x', width / 2).attr('y', -margin.top / 2).attr('text-anchor', 'middle').style('font-size', '16px').text(title);\n    };\n    const yOffsetValues = [0, height + margin.top + margin.bottom, 2 * (height + margin.top + margin.bottom)];\n\n    // Create bar graphs\n    createBarGraph('depression', 'dailyLifePressure', yOffsetValues[0], 'Depression vs Daily Life Pressure');\n    createBarGraph('stress', 'badHabits', yOffsetValues[1], 'Stress vs Bad Habits');\n    createBarGraph('anxiety', 'progress', yOffsetValues[2], 'Anxiety vs Progress');\n\n    // Create scatter plots\n    createScatterPlot('depression', 'dailyLifePressure', yOffsetValues[3], 'Depression vs Daily Life Pressure');\n    createScatterPlot('stress', 'badHabits', yOffsetValues[4], 'Stress vs Bad Habits');\n    createScatterPlot('anxiety', 'progress', yOffsetValues[5], 'Anxiety vs Progress');\n\n    // Create histograms\n    createHistogram('depression', yOffsetValues[6], 'Depression Distribution');\n    createHistogram('stress', yOffsetValues[7], 'Stress Distribution');\n    createHistogram('anxiety', yOffsetValues[8], 'Anxiety Distribution');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: graphRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 10\n  }, this);\n};\n_s(Analysis, \"XNG/roOlNWxTF7ymftfdirhS32A=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","Analysis","_s","graphRef","data","depression","stress","anxiety","dailyLifePressure","badHabits","progress","margin","top","right","bottom","left","width","height","container","select","current","createBarGraph","xDataKey","yDataKey","yOffset","title","svg","append","attr","xScale","scaleBand","domain","map","d","range","padding","yScale","scaleLinear","max","nice","selectAll","enter","bandwidth","call","axisBottom","text","axisLeft","style","createScatterPlot","createHistogram","dataKey","bins","histogram","thresholds","length","x1","x0","yOffsetValues","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SREERAM/Desktop/Personal/Sreeram/College/Hack-AI-thon/hackathon/ads/SREERAM/frontend/src/Components/Analysis.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst Analysis = () => {\n  const graphRef = useRef(null);\n\n  useEffect(() => {\n    const data = [\n      { depression: 3, stress: 5, anxiety: 2, dailyLifePressure: 6, badHabits: 4, progress: 3 },\n      // Add more data points as needed\n    ];\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    const width = 300 - margin.left - margin.right;\n    const height = 200 - margin.top - margin.bottom;\n\n    const container = d3.select(graphRef.current);\n\n    const createBarGraph = (xDataKey, yDataKey, yOffset, title) => {\n      const svg = container.append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top + yOffset})`);\n\n      const xScale = d3.scaleBand()\n        .domain(data.map(d => d[xDataKey]))\n        .range([0, width])\n        .padding(0.1);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(data, d => d[yDataKey])])\n        .nice()\n        .range([height, 0]);\n\n      svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('class', 'bar')\n        .attr('x', d => xScale(d[xDataKey]))\n        .attr('width', xScale.bandwidth())\n        .attr('y', d => yScale(d[yDataKey]))\n        .attr('height', d => height - yScale(d[yDataKey]))\n        .attr('fill', 'steelblue');\n\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(xScale))\n        .append('text')\n        .attr('x', width / 2)\n        .attr('y', margin.bottom - 5)\n        .attr('fill', '#000')\n        .text('Depression Level');\n\n      svg.append('g')\n        .call(d3.axisLeft(yScale))\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6 - margin.left)\n        .attr('x', 0 - (height / 2))\n        .attr('dy', '1em')\n        .attr('fill', '#000')\n        .text('Daily Life Pressure');\n\n      svg.append('text')\n        .attr('x', width / 2)\n        .attr('y', -margin.top / 2)\n        .attr('text-anchor', 'middle')\n        .style('font-size', '16px')\n        .text(title);\n    };\n\n    const createScatterPlot = (xDataKey, yDataKey, yOffset, title) => {\n      const svg = container.append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top + yOffset})`);\n\n      const xScale = d3.scaleLinear()\n        .domain([0, d3.max(data, d => d[xDataKey])])\n        .nice()\n        .range([0, width]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(data, d => d[yDataKey])])\n        .nice()\n        .range([height, 0]);\n\n      svg.selectAll('.dot')\n        .data(data)\n        .enter().append('circle')\n        .attr('class', 'dot')\n        .attr('cx', d => xScale(d[xDataKey]))\n        .attr('cy', d => yScale(d[yDataKey]))\n        .attr('r', 5)\n        .style('fill', 'steelblue');\n\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(xScale))\n        .append('text')\n        .attr('x', width / 2)\n        .attr('y', margin.bottom - 5)\n        .attr('fill', '#000')\n        .text('Stress Level');\n\n      svg.append('g')\n        .call(d3.axisLeft(yScale))\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6 - margin.left)\n        .attr('x', 0 - (height / 2))\n        .attr('dy', '1em')\n        .attr('fill', '#000')\n        .text('Bad Habits');\n\n      svg.append('text')\n        .attr('x', width / 2)\n        .attr('y', -margin.top / 2)\n        .attr('text-anchor', 'middle')\n        .style('font-size', '16px')\n        .text(title);\n    };\n\n    const createHistogram = (dataKey, yOffset, title) => {\n      const svg = container.append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top + yOffset})`);\n\n      const bins = d3.histogram()\n        .domain([0, d3.max(data, d => d[dataKey])])\n        .thresholds(10)\n        (data.map(d => d[dataKey]));\n\n      const xScale = d3.scaleLinear()\n        .domain([0, d3.max(bins, d => d.length)])\n        .nice()\n        .range([0, width]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(bins, d => d.x1)])\n        .nice()\n        .range([height, 0]);\n\n      svg.selectAll('rect')\n        .data(bins)\n        .enter().append('rect')\n        .attr('x', 1)\n        .attr('transform', d => `translate(${xScale(d.length)},${yScale(d.x0)})`)\n        .attr('width', d => width - xScale(d.length))\n        .attr('height', d => yScale(d.x1) - yScale(d.x0) - 1)\n        .style('fill', 'steelblue');\n\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(xScale))\n        .append('text')\n        .attr('x', width / 2)\n        .attr('y', margin.bottom - 5)\n        .attr('fill', '#000')\n        .text('Anxiety Level');\n\n      svg.append('g')\n        .call(d3.axisLeft(yScale))\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6 - margin.left)\n        .attr('x', 0 - (height / 2))\n        .attr('dy', '1em')\n        .attr('fill', '#000')\n        .text('Progress in Life');\n\n      svg.append('text')\n        .attr('x', width / 2)\n        .attr('y', -margin.top / 2)\n        .attr('text-anchor', 'middle')\n        .style('font-size', '16px')\n        .text(title);\n    };\n\n    const yOffsetValues = [0, height + margin.top + margin.bottom, 2 * (height + margin.top + margin.bottom)];\n\n    // Create bar graphs\n    createBarGraph('depression', 'dailyLifePressure', yOffsetValues[0], 'Depression vs Daily Life Pressure');\n    createBarGraph('stress', 'badHabits', yOffsetValues[1], 'Stress vs Bad Habits');\n    createBarGraph('anxiety', 'progress', yOffsetValues[2], 'Anxiety vs Progress');\n\n    // Create scatter plots\n    createScatterPlot('depression', 'dailyLifePressure', yOffsetValues[3], 'Depression vs Daily Life Pressure');\n    createScatterPlot('stress', 'badHabits', yOffsetValues[4], 'Stress vs Bad Habits');\n    createScatterPlot('anxiety', 'progress', yOffsetValues[5], 'Anxiety vs Progress');\n\n    // Create histograms\n    createHistogram('depression', yOffsetValues[6], 'Depression Distribution');\n    createHistogram('stress', yOffsetValues[7], 'Stress Distribution');\n    createHistogram('anxiety', yOffsetValues[8], 'Anxiety Distribution');\n  }, []);\n\n  return <div ref={graphRef}></div>;\n};\n\nexport default Analysis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}