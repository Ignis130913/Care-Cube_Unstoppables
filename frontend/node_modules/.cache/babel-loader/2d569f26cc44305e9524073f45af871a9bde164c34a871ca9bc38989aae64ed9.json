{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SREERAM\\\\Desktop\\\\Personal\\\\Sreeram\\\\College\\\\Hack-AI-thon\\\\hackathon\\\\ads\\\\SREERAM\\\\frontend\\\\src\\\\Components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './card';\nimport swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst symbols = ['bicycle', 'bicycle', 'leaf', 'leaf', 'cube', 'cube', 'anchor', 'anchor', 'paper-plane-o', 'paper-plane-o', 'bolt', 'bolt', 'bomb', 'bomb', 'diamond', 'diamond'];\nconst Game = () => {\n  _s();\n  const [opened, setOpened] = useState([]);\n  const [match, setMatch] = useState(0);\n  const [moves, setMoves] = useState(0);\n  const [clicks, setClicks] = useState(0);\n  const [timer, setTimer] = useState(null);\n  useEffect(() => {\n    if (clicks === 0) {\n      gameTimer();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (match === 8) {\n      endGame();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [match]);\n  useEffect(() => {\n    const clickListener = () => {\n      const deck = document.querySelector('.deck');\n      if (deck.querySelectorAll('.show').length > 1) {\n        return true;\n      }\n      ;\n      let currentCard = this;\n      let symbol = currentCard.innerHTML;\n      if (currentCard.classList.contains('open')) {\n        return true;\n      }\n      ;\n      currentCard.classList.add('open', 'show');\n      opened.push(symbol);\n      if (opened.length > 1) {\n        if (opened[0] === opened[1]) {\n          deck.querySelectorAll('.open').forEach(card => {\n            card.classList.add('match', 'animated', 'infinite', 'rubberBand');\n            setTimeout(() => {\n              deck.querySelectorAll('.match').forEach(card => {\n                card.classList.remove('open', 'show', 'animated', 'infinite', 'rubberBand');\n              });\n            }, 800);\n          });\n          setMatch(match + 1);\n        } else {\n          deck.querySelectorAll('.open').forEach(card => {\n            card.classList.add('notmatch', 'animated', 'infinite', 'wobble');\n            setTimeout(() => {\n              deck.querySelectorAll('.open').forEach(card => {\n                card.classList.remove('animated', 'infinite', 'wobble');\n              });\n            }, 800 / 1.5);\n            setTimeout(() => {\n              deck.querySelectorAll('.open').forEach(card => {\n                card.classList.remove('open', 'show', 'notmatch', 'animated', 'infinite', 'wobble');\n              });\n            }, 800);\n          });\n        }\n        opened = [];\n        setMoves(moves + 1);\n        setRating(moves);\n        document.querySelector('.moves').innerText = moves;\n      }\n      if (match === 8) {\n        setRating(moves);\n        let score = setRating(moves);\n        setTimeout(() => {\n          endGame(moves, score);\n        }, 500);\n      }\n    };\n    document.querySelector('.deck').querySelectorAll('.card:not(.match):not(.open)').forEach(card => {\n      card.addEventListener('click', clickListener);\n    });\n    return () => {\n      document.querySelector('.deck').querySelectorAll('.card').forEach(card => {\n        card.removeEventListener('click', clickListener);\n      });\n    };\n  }, [opened, match, moves]);\n  const gameTimer = () => {\n    let startTime = new Date().getTime();\n\n    // Update the timer every second\n    const intervalId = setInterval(() => {\n      let now = new Date().getTime();\n      // Find the time elapsed between now and start\n      let elapsed = now - startTime;\n      // Calculate minutes and seconds\n      let minutes = Math.floor(elapsed % (1000 * 60 * 60) / (1000 * 60));\n      let seconds = Math.floor(elapsed % (1000 * 60) / 1000);\n      // Add starting 0 if seconds < 10\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n      let currentTime = minutes + ':' + seconds;\n      // Update clock on game screen and modal\n      const clock = document.querySelector(\".clock\");\n      if (clock) {\n        clock.textContent = currentTime;\n      }\n    }, 750);\n\n    // Store the intervalId in the timer state variable\n    setTimer(intervalId);\n  };\n  const init = () => {\n    let cards = shuffle(symbols);\n    setOpened([]);\n    setMatch(0);\n    setMoves(0);\n    setClicks(0);\n    document.querySelector('.moves').innerText = '0';\n    const stars = document.querySelectorAll('.fa-star-o');\n    stars.forEach(star => star.classList.remove('fa-star-o'));\n    stars.forEach(star => star.classList.add('fa-star'));\n    let deck = document.querySelector('.deck');\n    deck.innerHTML = '';\n    cards.forEach(symbol => {\n      let li = document.createElement('li');\n      li.classList.add('card');\n      li.innerHTML = `<i class=\"fa fa-${symbol}\"></i>`;\n      deck.appendChild(li);\n    });\n    document.querySelector(\".clock\").innerText = \"0:00\";\n  };\n  const shuffle = array => {\n    let index = array.length,\n      temp,\n      randomIndex;\n    while (0 !== index) {\n      randomIndex = Math.floor(Math.random() * index);\n      index -= 1;\n      temp = array[index];\n      array[index] = array[randomIndex];\n      array[randomIndex] = temp;\n    }\n    return array;\n  };\n  const setRating = moves => {\n    let score = 3;\n    if (moves <= 10) {\n      document.querySelectorAll('.stars li')[2].classList.remove('fa-star');\n      document.querySelectorAll('.stars li')[2].classList.add('fa-star-o');\n    } else if (moves > 10 && moves <= 14) {\n      document.querySelectorAll('.stars li')[1].classList.remove('fa-star');\n      document.querySelectorAll('.stars li')[1].classList.add('fa-star-o');\n      score = 2;\n    } else if (moves > 14) {\n      document.querySelectorAll('.stars li')[0].classList.remove('fa-star');\n      document.querySelectorAll('.stars li')[0].classList.add('fa-star-o');\n      score = 1;\n    }\n    return score;\n  };\n  const endGame = () => {\n    let score = setRating(moves);\n    let msg = score === 1 ? score + ' Star' : score + ' Stars';\n    swal({\n      allowEscapeKey: false,\n      allowOutsideClick: false,\n      title: 'Congratulations! You Won!',\n      text: 'With ' + moves + ' Moves and ' + msg + '\\n Woooooo!',\n      type: 'success',\n      confirmButtonColor: '#02ccba',\n      confirmButtonText: 'Play again!'\n    }).then(isConfirm => {\n      if (isConfirm) {\n        setClicks(0);\n        clearInterval(timer);\n        init();\n      }\n    });\n  };\n  const restartGame = () => {\n    swal({\n      allowEscapeKey: false,\n      allowOutsideClick: false,\n      title: 'Are you sure?',\n      text: \"Your progress will be Lost!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#02ccba',\n      cancelButtonColor: '#f95c3c',\n      confirmButtonText: 'Yes, Restart Game!'\n    }).then(isConfirm => {\n      if (isConfirm) {\n        setClicks(0);\n        clearInterval(timer);\n        init();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerdiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftdiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"stars\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"moves\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), \" Moves\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timers\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"timer\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"info\",\n            children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"clock data\",\n              children: \"0:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restart\",\n          onClick: restartGame,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-repeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"deck\",\n      children: symbols.map((symbol, index) => /*#__PURE__*/_jsxDEV(Card, {\n        symbol: symbol,\n        onClick: () => {}\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"MhwTLvNlLLJHBEAoiqKf09+YzGE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Card","swal","jsxDEV","_jsxDEV","symbols","Game","_s","opened","setOpened","match","setMatch","moves","setMoves","clicks","setClicks","timer","setTimer","gameTimer","endGame","clickListener","deck","document","querySelector","querySelectorAll","length","currentCard","symbol","innerHTML","classList","contains","add","push","forEach","card","setTimeout","remove","setRating","innerText","score","addEventListener","removeEventListener","startTime","Date","getTime","intervalId","setInterval","now","elapsed","minutes","Math","floor","seconds","currentTime","clock","textContent","init","cards","shuffle","stars","star","li","createElement","appendChild","array","index","temp","randomIndex","random","msg","allowEscapeKey","allowOutsideClick","title","text","type","confirmButtonColor","confirmButtonText","then","isConfirm","clearInterval","restartGame","showCancelButton","cancelButtonColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/SREERAM/Desktop/Personal/Sreeram/College/Hack-AI-thon/hackathon/ads/SREERAM/frontend/src/Components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './card';\nimport swal from 'sweetalert2';\n\nconst symbols = ['bicycle', 'bicycle', 'leaf', 'leaf', 'cube', 'cube', 'anchor', 'anchor', 'paper-plane-o', 'paper-plane-o', 'bolt', 'bolt', 'bomb', 'bomb', 'diamond', 'diamond'];\n\nconst Game = () => {\n  const [opened, setOpened] = useState([]);\n  const [match, setMatch] = useState(0);\n  const [moves, setMoves] = useState(0);\n  const [clicks, setClicks] = useState(0);\n  const [timer, setTimer] = useState(null);\n\n  useEffect(() => {\n    if (clicks === 0) {\n      gameTimer();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (match === 8) {\n      endGame();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [match]);\n\n  useEffect(() => {\n    const clickListener = () => {\n      const deck = document.querySelector('.deck');\n      if (deck.querySelectorAll('.show').length > 1) { return true; };\n      let currentCard = this;\n      let symbol = currentCard.innerHTML;\n      if (currentCard.classList.contains('open')) { return true; };\n      currentCard.classList.add('open', 'show');\n      opened.push(symbol);\n      if (opened.length > 1) {\n        if (opened[0] === opened[1]) {\n          deck.querySelectorAll('.open').forEach(card => {\n            card.classList.add('match', 'animated', 'infinite', 'rubberBand');\n            setTimeout(() => {\n              deck.querySelectorAll('.match').forEach(card => {\n                card.classList.remove('open', 'show', 'animated', 'infinite', 'rubberBand');\n              });\n            }, 800);\n          });\n          setMatch(match + 1);\n        } else {\n          deck.querySelectorAll('.open').forEach(card => {\n            card.classList.add('notmatch', 'animated', 'infinite', 'wobble');\n            setTimeout(() => {\n              deck.querySelectorAll('.open').forEach(card => {\n                card.classList.remove('animated', 'infinite', 'wobble');\n              });\n            }, 800 / 1.5);\n            setTimeout(() => {\n              deck.querySelectorAll('.open').forEach(card => {\n                card.classList.remove('open', 'show', 'notmatch', 'animated', 'infinite', 'wobble');\n              });\n            }, 800);\n          });\n        }\n        opened = [];\n        setMoves(moves + 1);\n        setRating(moves);\n        document.querySelector('.moves').innerText = moves;\n      }\n\n      if (match === 8) {\n        setRating(moves);\n        let score = setRating(moves);\n        setTimeout(() => {\n          endGame(moves, score);\n        }, 500);\n      }\n    };\n\n    document.querySelector('.deck').querySelectorAll('.card:not(.match):not(.open)').forEach(card => {\n      card.addEventListener('click', clickListener);\n    });\n\n    return () => {\n      document.querySelector('.deck').querySelectorAll('.card').forEach(card => {\n        card.removeEventListener('click', clickListener);\n      });\n    };\n  }, [opened, match, moves]);\n\n  const gameTimer = () => {\n    let startTime = new Date().getTime();\n\n    // Update the timer every second\n    const intervalId = setInterval(() => {\n      let now = new Date().getTime();\n      // Find the time elapsed between now and start\n      let elapsed = now - startTime;\n      // Calculate minutes and seconds\n      let minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60));\n      let seconds = Math.floor((elapsed % (1000 * 60)) / 1000);\n      // Add starting 0 if seconds < 10\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n      let currentTime = minutes + ':' + seconds;\n      // Update clock on game screen and modal\n      const clock = document.querySelector(\".clock\");\n      if (clock) {\n        clock.textContent = currentTime;\n      }\n    }, 750);\n\n    // Store the intervalId in the timer state variable\n    setTimer(intervalId);\n  };\n\n  const init = () => {\n    let cards = shuffle(symbols);\n    setOpened([]);\n    setMatch(0);\n    setMoves(0);\n    setClicks(0);\n    document.querySelector('.moves').innerText = '0';\n    const stars = document.querySelectorAll('.fa-star-o');\n    stars.forEach(star => star.classList.remove('fa-star-o'));\n    stars.forEach(star => star.classList.add('fa-star'));\n\n    let deck = document.querySelector('.deck');\n    deck.innerHTML = '';\n    cards.forEach(symbol => {\n      let li = document.createElement('li');\n      li.classList.add('card');\n      li.innerHTML = `<i class=\"fa fa-${symbol}\"></i>`;\n      deck.appendChild(li);\n    });\n\n    document.querySelector(\".clock\").innerText = \"0:00\";\n  };\n\n  const shuffle = (array) => {\n    let index = array.length, temp, randomIndex;\n    while (0 !== index) {\n      randomIndex = Math.floor(Math.random() * index);\n      index -= 1;\n      temp = array[index];\n      array[index] = array[randomIndex];\n      array[randomIndex] = temp;\n    }\n    return array;\n  }\n\n  const setRating = (moves) => {\n    let score = 3;\n    if (moves <= 10) {\n      document.querySelectorAll('.stars li')[2].classList.remove('fa-star');\n      document.querySelectorAll('.stars li')[2].classList.add('fa-star-o');\n    } else if (moves > 10 && moves <= 14) {\n      document.querySelectorAll('.stars li')[1].classList.remove('fa-star');\n      document.querySelectorAll('.stars li')[1].classList.add('fa-star-o');\n      score = 2;\n    } else if (moves > 14) {\n      document.querySelectorAll('.stars li')[0].classList.remove('fa-star');\n      document.querySelectorAll('.stars li')[0].classList.add('fa-star-o');\n      score = 1;\n    }\n    return score;\n  };\n\n  const endGame = () => {\n    let score = setRating(moves);\n    let msg = score === 1 ? score + ' Star' : score + ' Stars';\n    swal({\n      allowEscapeKey: false,\n      allowOutsideClick: false,\n      title: 'Congratulations! You Won!',\n      text: 'With ' + moves + ' Moves and ' + msg + '\\n Woooooo!',\n      type: 'success',\n      confirmButtonColor: '#02ccba',\n      confirmButtonText: 'Play again!'\n    }).then((isConfirm) => {\n      if (isConfirm) {\n        setClicks(0);\n        clearInterval(timer);\n        init();\n      }\n    });\n  }\n\n  const restartGame = () => {\n    swal({\n      allowEscapeKey: false,\n      allowOutsideClick: false,\n      title: 'Are you sure?',\n      text: \"Your progress will be Lost!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#02ccba',\n      cancelButtonColor: '#f95c3c',\n      confirmButtonText: 'Yes, Restart Game!'\n    }).then((isConfirm) => {\n      if (isConfirm) {\n        setClicks(0);\n        clearInterval(timer);\n        init();\n      }\n    });\n  };\n\n  return (\n    <div className=\"containerdiv\">\n      <h1>Memory Game</h1>\n      <div id=\"score-panel\">\n        <div className=\"leftdiv\">\n          <ul className=\"stars\">\n            <li><i className=\"fa fa-star\"></i></li>\n            <li><i className=\"fa fa-star\"></i></li>\n            <li><i className=\"fa fa-star\"></i></li>\n          </ul>\n          <span className=\"moves\">0</span> Moves\n        </div>\n        <div className=\"timers\">\n          <article className=\"timer\">\n            <h3 className=\"info\">Time: <span className=\"clock data\">0:00</span></h3>\n          </article>\n          <div className=\"restart\" onClick={restartGame}>\n            <i className=\"fa fa-repeat\"></i>\n          </div>\n        </div>\n        <div className=\"clear\"></div>\n      </div>\n      <ul className=\"deck\">\n        {symbols.map((symbol, index) => (\n          <Card key={index} symbol={symbol} onClick={() => { }} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}