{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SREERAM\\\\Desktop\\\\Personal\\\\Sreeram\\\\College\\\\Hack-AI-thon\\\\hackathon\\\\ads\\\\SREERAM\\\\frontend\\\\src\\\\Components\\\\Game1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport swal from 'sweetalert2';\nimport './Game1.css'; // Import the CSS file\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = ['Car', 'Tree', 'Diamond', 'Ship', 'Plane', 'Rocket', 'Bomb', 'Anchor', 'Car', 'Tree', 'Diamond', 'Ship', 'Plane', 'Rocket', 'Bomb', 'Anchor'];\nconst colors = ['#02ccba', '#f95c3c', '#aa7ecd', '#ffa600', '#d90429', '#0047ab', '#6497b1', '#88b04b', '#02ccba', '#f95c3c', '#aa7ecd', '#ffa600', '#d90429', '#0047ab', '#6497b1', '#88b04b'];\nconst Game1 = () => {\n  _s();\n  const [opened, setOpened] = useState([]);\n  const [match, setMatch] = useState(0);\n  const [moves, setMoves] = useState(0);\n  const [timer, setTimer] = useState(null);\n  const [second, setSecond] = useState(0);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    initGame();\n  }, []);\n  useEffect(() => {\n    if (match === words.length / 2) {\n      endGame();\n    }\n  }, [match]);\n  const shuffle = array => {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n  const initGame = () => {\n    const shuffledWords = shuffle(words);\n    const shuffledColors = shuffle(colors);\n    const newCards = shuffledWords.map((word, index) => ({\n      word,\n      color: shuffledColors[index],\n      id: index,\n      isOpened: false // added isOpened property\n    }));\n    setCards(newCards);\n    setOpened([]);\n    setMatch(0);\n    setMoves(0);\n    clearInterval(timer);\n    setSecond(0);\n  };\n  const setRating = moves => {\n    if (moves > 20) return 0;else if (moves > 16) return 1;else if (moves > 10) return 2;else return 3;\n  };\n  const endGame = () => {\n    clearInterval(timer);\n    const score = setRating(moves);\n    swal({\n      allowEscapeKey: false,\n      allowOutsideClick: false,\n      title: 'Congratulations! You Won!',\n      text: `With ${moves} Moves and ${score} Star(s) in ${second} seconds.\\n Woooooo!`,\n      type: 'success',\n      confirmButtonColor: '#02ccba',\n      confirmButtonText: 'Play again!'\n    }).then(isConfirm => {\n      if (isConfirm) {\n        initGame();\n      }\n    });\n  };\n  const handleClick = id => {\n    if (!opened.some(card => card.id === id)) {\n      const newOpened = [...opened, {\n        id,\n        color: cards.find(card => card.id === id).color\n      }];\n      setOpened(newOpened);\n      const updatedCards = cards.map(card => {\n        if (card.id === id) {\n          return {\n            ...card,\n            isOpened: true\n          }; // set isOpened to true when clicked\n        }\n        return card;\n      });\n      setCards(updatedCards);\n      if (newOpened.length === 2) {\n        setMoves(moves + 1);\n        if (newOpened[0].color === newOpened[1].color) {\n          setMatch(match + 1);\n          setOpened([]);\n        } else {\n          setTimeout(() => {\n            setOpened([]);\n            const updatedCards = cards.map(card => ({\n              ...card,\n              isOpened: false\n            }));\n            setCards(updatedCards);\n          }, 1000);\n        }\n      }\n    }\n  };\n  const startTimer = () => {\n    setTimer(setInterval(() => {\n      setSecond(second => second + 1);\n    }, 1000));\n  };\n  const handleRestart = () => {\n    swal({\n      allowEscapeKey: false,\n      allowOutsideClick: false,\n      title: 'Are you sure?',\n      text: \"Your progress will be lost!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#02ccba',\n      cancelButtonColor: '#f95c3c',\n      confirmButtonText: 'Yes, Restart Game!'\n    }).then(isConfirm => {\n      if (isConfirm) {\n        initGame();\n      }\n    });\n  };\n  useEffect(() => {\n    if (match === 0 && moves === 0) {\n      startTimer();\n    }\n  }, [match, moves]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"stars\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"moves\",\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), \" Moves | Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timer\",\n        children: second\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 62\n      }, this), \" s\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/homec\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restart\",\n          onClick: handleRestart,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-repeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${opened.some(o => o.id === card.id) ? 'open' : ''}`,\n        onClick: () => handleClick(card.id),\n        style: {\n          backgroundColor: card.isOpened ? card.color : '#2e3d49'\n        },\n        children: opened.some(o => o.id === card.id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emoji\",\n          children: card.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 51\n        }, this) : null\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(Game1, \"gUNKh6dNRX+TGvmtoa/ITAbjAoM=\");\n_c = Game1;\nexport default Game1;\nvar _c;\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"names":["React","useState","useEffect","swal","Link","jsxDEV","_jsxDEV","words","colors","Game1","_s","opened","setOpened","match","setMatch","moves","setMoves","timer","setTimer","second","setSecond","cards","setCards","initGame","length","endGame","shuffle","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","shuffledWords","shuffledColors","newCards","map","word","index","color","id","isOpened","clearInterval","setRating","score","allowEscapeKey","allowOutsideClick","title","text","type","confirmButtonColor","confirmButtonText","then","isConfirm","handleClick","some","card","newOpened","find","updatedCards","setTimeout","startTimer","setInterval","handleRestart","showCancelButton","cancelButtonColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","o","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/SREERAM/Desktop/Personal/Sreeram/College/Hack-AI-thon/hackathon/ads/SREERAM/frontend/src/Components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport swal from 'sweetalert2';\r\nimport './Game1.css'; // Import the CSS file\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst words = ['Car', 'Tree', 'Diamond', 'Ship', 'Plane', 'Rocket', 'Bomb', 'Anchor', 'Car', 'Tree', 'Diamond', 'Ship', 'Plane', 'Rocket', 'Bomb', 'Anchor'];\r\nconst colors = ['#02ccba', '#f95c3c', '#aa7ecd', '#ffa600', '#d90429', '#0047ab', '#6497b1', '#88b04b', '#02ccba', '#f95c3c', '#aa7ecd', '#ffa600', '#d90429', '#0047ab', '#6497b1', '#88b04b'];\r\n\r\nconst Game1 = () => {\r\n  const [opened, setOpened] = useState([]);\r\n  const [match, setMatch] = useState(0);\r\n  const [moves, setMoves] = useState(0);\r\n  const [timer, setTimer] = useState(null);\r\n  const [second, setSecond] = useState(0);\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    initGame();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (match === words.length / 2) {\r\n      endGame();\r\n    }\r\n  }, [match]);\r\n\r\n  const shuffle = (array) => {\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const initGame = () => {\r\n    const shuffledWords = shuffle(words);\r\n    const shuffledColors = shuffle(colors);\r\n    const newCards = shuffledWords.map((word, index) => ({\r\n      word,\r\n      color: shuffledColors[index],\r\n      id: index,\r\n      isOpened: false // added isOpened property\r\n    }));\r\n    setCards(newCards);\r\n    setOpened([]);\r\n    setMatch(0);\r\n    setMoves(0);\r\n    clearInterval(timer);\r\n    setSecond(0);\r\n  };\r\n\r\n  const setRating = (moves) => {\r\n    if (moves > 20) return 0;\r\n    else if (moves > 16) return 1;\r\n    else if (moves > 10) return 2;\r\n    else return 3;\r\n  };\r\n\r\n  const endGame = () => {\r\n    clearInterval(timer);\r\n    const score = setRating(moves);\r\n    swal({\r\n      allowEscapeKey: false,\r\n      allowOutsideClick: false,\r\n      title: 'Congratulations! You Won!',\r\n      text: `With ${moves} Moves and ${score} Star(s) in ${second} seconds.\\n Woooooo!`,\r\n      type: 'success',\r\n      confirmButtonColor: '#02ccba',\r\n      confirmButtonText: 'Play again!'\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        initGame();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleClick = (id) => {\r\n    if (!opened.some(card => card.id === id)) {\r\n      const newOpened = [...opened, { id, color: cards.find(card => card.id === id).color }];\r\n      setOpened(newOpened);\r\n      const updatedCards = cards.map(card => {\r\n        if (card.id === id) {\r\n          return { ...card, isOpened: true }; // set isOpened to true when clicked\r\n        }\r\n        return card;\r\n      });\r\n      setCards(updatedCards);\r\n      if (newOpened.length === 2) {\r\n        setMoves(moves + 1);\r\n        if (newOpened[0].color === newOpened[1].color) {\r\n          setMatch(match + 1);\r\n          setOpened([]);\r\n        } else {\r\n          setTimeout(() => {\r\n            setOpened([]);\r\n            const updatedCards = cards.map(card => ({ ...card, isOpened: false }));\r\n            setCards(updatedCards);\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setTimer(setInterval(() => {\r\n      setSecond(second => second + 1);\r\n    }, 1000));\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    swal({\r\n      allowEscapeKey: false,\r\n      allowOutsideClick: false,\r\n      title: 'Are you sure?',\r\n      text: \"Your progress will be lost!\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#02ccba',\r\n      cancelButtonColor: '#f95c3c',\r\n      confirmButtonText: 'Yes, Restart Game!'\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        initGame();\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (match === 0 && moves === 0) {\r\n      startTimer();\r\n    }\r\n  }, [match, moves]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Matching Game</h1>\r\n      <div className=\"score-panel\">\r\n        <ul className=\"stars\">\r\n          <li><i className=\"fa fa-star\"></i></li>\r\n          <li><i className=\"fa fa-star\"></i></li>\r\n          <li><i className=\"fa fa-star\"></i></li>\r\n        </ul>\r\n        <span className=\"moves\">{moves}</span> Moves | Time: <span className=\"timer\">{second}</span> s\r\n        <Link to='/homec'><div className=\"restart\" onClick={handleRestart}>\r\n          <i className=\"fa fa-repeat\"></i>\r\n        </div></Link>\r\n      </div>\r\n      <div className=\"deck\">\r\n        {cards.map((card) => (\r\n          <div key={card.id} className={`card ${opened.some(o => o.id === card.id) ? 'open' : ''}`} onClick={() => handleClick(card.id)} style={{ backgroundColor: card.isOpened ? card.color : '#2e3d49' }}>\r\n            {opened.some(o => o.id === card.id) ? <span className=\"emoji\">{card.word}</span> : null}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}